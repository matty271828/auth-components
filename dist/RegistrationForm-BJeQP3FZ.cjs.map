{"version":3,"file":"RegistrationForm-BJeQP3FZ.cjs","sources":["../src/components/ui/password-strength-indicator.tsx","../src/components/RegistrationForm.tsx"],"sourcesContent":["import { Check, X, ChevronDown, ChevronUp } from \"lucide-react\"\nimport { useState } from \"react\"\nimport type { PasswordStrength } from \"@/lib/utils\"\n\ninterface PasswordStrengthIndicatorProps {\n  strength: PasswordStrength\n  showRequirements?: boolean\n  compact?: boolean\n}\n\nexport function PasswordStrengthIndicator({ \n  strength, \n  showRequirements = true,\n  compact = true\n}: PasswordStrengthIndicatorProps) {\n  const [showFullRequirements, setShowFullRequirements] = useState(false)\n\n  if (!showRequirements) {\n    return (\n      <div className=\"space-y-2\">\n        <div className=\"flex justify-between items-center\">\n          <span className=\"text-xs sm:text-sm font-medium\">Password Strength</span>\n          <span className={`text-xs sm:text-sm font-semibold ${strength.color}`}>\n            {strength.label}\n          </span>\n        </div>\n        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n          <div \n            className={`h-2 rounded-full transition-all duration-300 ${\n              strength.score <= 1 ? 'bg-red-500' :\n              strength.score === 2 ? 'bg-orange-500' :\n              strength.score === 3 ? 'bg-yellow-500' :\n              strength.score === 4 ? 'bg-blue-500' :\n              'bg-green-500'\n            }`}\n            style={{ width: `${(strength.score / 5) * 100}%` }}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  if (compact) {\n    const metCount = strength.requirements.filter(req => req.met).length\n    const totalCount = strength.requirements.length\n    \n    return (\n      <div className=\"space-y-2\">\n        {/* Compact strength bar with count */}\n        <div className=\"flex justify-between items-center\">\n          <span className=\"text-xs sm:text-sm font-medium\">Password Strength</span>\n          <div className=\"flex items-center space-x-2\">\n            <span className={`text-xs sm:text-sm font-semibold ${strength.color}`}>\n              {strength.label}\n            </span>\n            <span className=\"text-xs text-gray-500\">\n              ({metCount}/{totalCount})\n            </span>\n          </div>\n        </div>\n        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n          <div \n            className={`h-2 rounded-full transition-all duration-300 ${\n              strength.score <= 1 ? 'bg-red-500' :\n              strength.score === 2 ? 'bg-orange-500' :\n              strength.score === 3 ? 'bg-yellow-500' :\n              strength.score === 4 ? 'bg-blue-500' :\n              'bg-green-500'\n            }`}\n            style={{ width: `${(strength.score / 5) * 100}%` }}\n          />\n        </div>\n        \n        {/* Expandable requirements with fixed height container */}\n        <div className=\"space-y-2\">\n          <button\n            type=\"button\"\n            onClick={() => setShowFullRequirements(!showFullRequirements)}\n            className=\"flex items-center space-x-1 text-xs text-gray-600 hover:text-gray-800 transition-colors\"\n          >\n            <span>Requirements</span>\n            {showFullRequirements ? (\n              <ChevronUp className=\"h-3 w-3\" />\n            ) : (\n              <ChevronDown className=\"h-3 w-3\" />\n            )}\n          </button>\n          \n          <div className={`overflow-hidden transition-all duration-300 ${\n            showFullRequirements ? 'max-h-96 opacity-100' : 'max-h-0 opacity-0'\n          }`}>\n            <div className=\"grid grid-cols-1 gap-1.5 sm:gap-2 pl-2 pb-2\">\n              {strength.requirements.map((requirement) => (\n                <div \n                  key={requirement.id}\n                  className={`flex items-start space-x-2 text-xs sm:text-sm transition-colors duration-200 ${\n                    requirement.met ? 'text-green-600' : 'text-gray-500'\n                  }`}\n                >\n                  {requirement.met ? (\n                    <Check className=\"h-3 w-3 sm:h-4 sm:w-4 text-green-500 flex-shrink-0 mt-0.5\" />\n                  ) : (\n                    <X className=\"h-3 w-3 sm:h-4 sm:w-4 text-gray-400 flex-shrink-0 mt-0.5\" />\n                  )}\n                  <span className={`leading-tight ${requirement.met ? 'font-medium' : ''}`}>\n                    {requirement.label}\n                  </span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  // Full expanded view (original)\n  return (\n    <div className=\"space-y-3\">\n      {/* Strength bar */}\n      <div className=\"space-y-2\">\n        <div className=\"flex justify-between items-center\">\n          <span className=\"text-xs sm:text-sm font-medium\">Password Strength</span>\n          <span className={`text-xs sm:text-sm font-semibold ${strength.color}`}>\n            {strength.label}\n          </span>\n        </div>\n        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n          <div \n            className={`h-2 rounded-full transition-all duration-300 ${\n              strength.score <= 1 ? 'bg-red-500' :\n              strength.score === 2 ? 'bg-orange-500' :\n              strength.score === 3 ? 'bg-yellow-500' :\n              strength.score === 4 ? 'bg-blue-500' :\n              'bg-green-500'\n            }`}\n            style={{ width: `${(strength.score / 5) * 100}%` }}\n          />\n        </div>\n      </div>\n\n      {/* Requirements checklist */}\n      <div className=\"space-y-2\">\n        <p className=\"text-xs sm:text-sm font-medium text-gray-700\">Requirements:</p>\n        <div className=\"grid grid-cols-1 gap-1.5 sm:gap-2\">\n          {strength.requirements.map((requirement) => (\n            <div \n              key={requirement.id}\n              className={`flex items-start space-x-2 text-xs sm:text-sm transition-colors duration-200 ${\n                requirement.met ? 'text-green-600' : 'text-gray-500'\n              }`}\n            >\n              {requirement.met ? (\n                <Check className=\"h-3 w-3 sm:h-4 sm:w-4 text-green-500 flex-shrink-0 mt-0.5\" />\n              ) : (\n                <X className=\"h-3 w-3 sm:h-4 sm:w-4 text-gray-400 flex-shrink-0 mt-0.5\" />\n              )}\n              <span className={`leading-tight ${requirement.met ? 'font-medium' : ''}`}>\n                {requirement.label}\n              </span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n} ","\"use client\"\n\nimport type React from \"react\"\n\nimport { useState, useMemo } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Eye, EyeOff, Loader2 } from \"lucide-react\"\nimport { auth } from \"@/lib/auth\"\nimport type { User } from \"../lib/types\"\nimport { validatePassword, isPasswordValid } from \"@/lib/utils\"\nimport { PasswordStrengthIndicator } from \"./ui/password-strength-indicator\"\n\ninterface RegistrationFormProps {\n  onSuccess?: (user: User) => void\n  onError?: (error: string) => void\n  redirectUrl?: string\n  onSwitchToLogin?: () => void\n}\n\nexport default function RegistrationForm({ onSuccess, onError, redirectUrl, onSwitchToLogin }: RegistrationFormProps) {\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n  const [firstName, setFirstName] = useState(\"\")\n  const [lastName, setLastName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n\n  // Calculate password strength whenever password changes\n  const passwordStrength = useMemo(() => {\n    return validatePassword(password)\n  }, [password])\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!firstName || !lastName || !email || !password || !confirmPassword) {\n      setError(\"Please fill in all fields\")\n      return\n    }\n\n    if (!isPasswordValid(password)) {\n      setError(\"Password does not meet all requirements\")\n      return\n    }\n\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\")\n      return\n    }\n\n    setIsLoading(true)\n    setError(\"\")\n\n    try {\n      const user = await auth.signup({ firstName, lastName, email, password })\n      console.log(\"Registration successful:\", user)\n      onSuccess?.(user)\n      \n      // Redirect after a short delay\n      if (redirectUrl) {\n        setTimeout(() => {\n          window.location.href = redirectUrl\n        }, 1000)\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : \"Registration failed\"\n      setError(errorMessage)\n      onError?.(errorMessage)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <Card className=\"w-full max-w-sm sm:max-w-md mx-auto border-none shadow-none\">\n      <CardHeader className=\"space-y-1 px-2 sm:px-6 pt-3 sm:pt-6\">\n        <CardTitle className=\"text-base sm:text-xl lg:text-2xl font-bold text-center\">Create Account</CardTitle>\n        <CardDescription className=\"text-center text-xs sm:text-sm lg:text-base\">Enter your details to create your account</CardDescription>\n      </CardHeader>\n      <form onSubmit={handleSubmit}>\n        <CardContent className=\"space-y-2 sm:space-y-4 px-2 sm:px-6\">\n          {error && (\n            <div className=\"p-2 text-xs sm:text-sm text-red-600 bg-red-50 border border-red-200 rounded-md\">\n              {error}\n            </div>\n          )}\n          \n          {/* Single column on mobile, two columns on larger screens */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 sm:gap-4\">\n            <div className=\"space-y-1\">\n              <Label htmlFor=\"firstName\" className=\"text-xs sm:text-sm lg:text-base\">First Name</Label>\n              <Input \n                id=\"firstName\" \n                name=\"firstName\" \n                type=\"text\" \n                placeholder=\"John\" \n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                required \n                disabled={isLoading}\n                className=\"h-9 sm:h-11 text-base sm:text-base\"\n              />\n            </div>\n            <div className=\"space-y-1\">\n              <Label htmlFor=\"lastName\" className=\"text-xs sm:text-sm lg:text-base\">Last Name</Label>\n              <Input \n                id=\"lastName\" \n                name=\"lastName\" \n                type=\"text\" \n                placeholder=\"Doe\" \n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                required \n                disabled={isLoading}\n                className=\"h-9 sm:h-11 text-base sm:text-base\"\n              />\n            </div>\n          </div>\n\n          <div className=\"space-y-1\">\n            <Label htmlFor=\"email\" className=\"text-xs sm:text-sm lg:text-base\">Email</Label>\n            <Input \n              id=\"email\" \n              name=\"email\" \n              type=\"email\" \n              placeholder=\"john.doe@example.com\" \n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required \n              disabled={isLoading}\n              className=\"h-9 sm:h-11 text-base sm:text-base\"\n            />\n          </div>\n\n          <div className=\"space-y-1\">\n            <Label htmlFor=\"password\" className=\"text-xs sm:text-sm lg:text-base\">Password</Label>\n            <div className=\"relative\">\n              <Input\n                id=\"password\"\n                name=\"password\"\n                type={showPassword ? \"text\" : \"password\"}\n                placeholder=\"Enter your password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n                minLength={12}\n                disabled={isLoading}\n                className=\"h-9 sm:h-11 text-base sm:text-base pr-10 sm:pr-12\"\n              />\n              <Button\n                type=\"button\"\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"absolute right-0 top-0 h-full px-2 py-1 sm:px-3 sm:py-2 hover:bg-transparent min-h-0\"\n                onClick={() => setShowPassword(!showPassword)}\n                disabled={isLoading}\n              >\n                {showPassword ? <EyeOff className=\"h-3 w-3 sm:h-4 sm:w-4\" /> : <Eye className=\"h-3 w-3 sm:h-4 sm:w-4\" />}\n                <span className=\"sr-only\">{showPassword ? \"Hide password\" : \"Show password\"}</span>\n              </Button>\n            </div>\n            \n            {/* Ultra-compact password strength indicator on mobile */}\n            {password && (\n              <div className=\"mt-1 sm:mt-3 p-1.5 sm:p-3 bg-gray-50 rounded-md border\">\n                <PasswordStrengthIndicator strength={passwordStrength} compact={true} />\n              </div>\n            )}\n          </div>\n\n          <div className=\"space-y-1 mb-2 sm:mb-4\">\n            <Label htmlFor=\"confirmPassword\" className=\"text-xs sm:text-sm lg:text-base\">Confirm Password</Label>\n            <div className=\"relative\">\n              <Input\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                type={showConfirmPassword ? \"text\" : \"password\"}\n                placeholder=\"Confirm your password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                required\n                disabled={isLoading}\n                className=\"h-9 sm:h-11 text-base sm:text-base pr-10 sm:pr-12\"\n              />\n              <Button\n                type=\"button\"\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"absolute right-0 top-0 h-full px-2 py-1 sm:px-3 sm:py-2 hover:bg-transparent min-h-0\"\n                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                disabled={isLoading}\n              >\n                {showConfirmPassword ? <EyeOff className=\"h-3 w-3 sm:h-4 sm:w-4\" /> : <Eye className=\"h-3 w-3 sm:h-4 sm:w-4\" />}\n                <span className=\"sr-only\">{showConfirmPassword ? \"Hide password\" : \"Show password\"}</span>\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n\n        <CardFooter className=\"flex flex-col space-y-2 sm:space-y-4 px-2 sm:px-6 pb-3 sm:pb-6\">\n          <Button \n            type=\"submit\" \n            className=\"w-full h-9 sm:h-11 text-sm sm:text-base\" \n            disabled={isLoading || !isPasswordValid(password)}\n          >\n            {isLoading ? (\n              <>\n                <Loader2 className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 animate-spin\" />\n                Creating account...\n              </>\n            ) : (\n              \"Create Account\"\n            )}\n          </Button>\n          <p className=\"text-xs sm:text-sm text-center text-muted-foreground\">\n            Already have an account?{\" \"}\n            <button \n              type=\"button\"\n              onClick={onSwitchToLogin}\n              className=\"text-primary hover:underline font-medium\"\n            >\n              Sign in\n            </button>\n          </p>\n        </CardFooter>\n      </form>\n    </Card>\n  )\n} "],"names":["useState","jsxs","jsx","ChevronUp","ChevronDown","Check","X","useMemo","validatePassword","isPasswordValid","auth","error","Card","CardHeader","CardTitle","CardDescription","CardContent","Label","Input","Button","EyeOff","Eye","CardFooter","Fragment","Loader2"],"mappings":"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"}